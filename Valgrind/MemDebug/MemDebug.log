==10327== Memcheck, a memory error detector
==10327== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10327== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==10327== Command: ./a.out
==10327== Parent PID: 7791
==10327== 
==10327== Invalid write of size 1
==10327==    at 0x400610: mem_overrun (MemDebug.c:19)
==10327==    by 0x400679: main (MemDebug.c:39)
==10327==  Address 0x51f431a is 9 bytes after a block of size 1 alloc'd
==10327==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==10327==    by 0x400603: mem_overrun (MemDebug.c:18)
==10327==    by 0x400679: main (MemDebug.c:39)
==10327== 
==10327== Invalid free() / delete / delete[] / realloc()
==10327==    at 0x4C28CDD: free (vg_replace_malloc.c:530)
==10327==    by 0x40064E: mem_doublefree (MemDebug.c:27)
==10327==    by 0x40067E: main (MemDebug.c:40)
==10327==  Address 0x51f4360 is 0 bytes inside a block of size 20 free'd
==10327==    at 0x4C28CDD: free (vg_replace_malloc.c:530)
==10327==    by 0x400642: mem_doublefree (MemDebug.c:26)
==10327==    by 0x40067E: main (MemDebug.c:40)
==10327==  Block was alloc'd at
==10327==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==10327==    by 0x400632: mem_doublefree (MemDebug.c:25)
==10327==    by 0x40067E: main (MemDebug.c:40)
==10327== 
==10327== Conditional jump or move depends on uninitialised value(s)
==10327==    at 0x4C28C90: free (vg_replace_malloc.c:530)
==10327==    by 0x400664: mem_free_void_point (MemDebug.c:33)
==10327==    by 0x400683: main (MemDebug.c:41)
==10327==  Uninitialised value was created by a stack allocation
==10327==    at 0x400651: mem_free_void_point (MemDebug.c:31)
==10327== 
==10327== Invalid free() / delete / delete[] / realloc()
==10327==    at 0x4C28CDD: free (vg_replace_malloc.c:530)
==10327==    by 0x400664: mem_free_void_point (MemDebug.c:33)
==10327==    by 0x400683: main (MemDebug.c:41)
==10327==  Address 0x51f4360 is 0 bytes inside a block of size 20 free'd
==10327==    at 0x4C28CDD: free (vg_replace_malloc.c:530)
==10327==    by 0x400642: mem_doublefree (MemDebug.c:26)
==10327==    by 0x40067E: main (MemDebug.c:40)
==10327==  Block was alloc'd at
==10327==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==10327==    by 0x400632: mem_doublefree (MemDebug.c:25)
==10327==    by 0x40067E: main (MemDebug.c:40)
==10327== 
==10327== 
==10327== HEAP SUMMARY:
==10327==     in use at exit: 578 bytes in 2 blocks
==10327==   total heap usage: 4 allocs, 4 frees, 599 bytes allocated
==10327== 
==10327== 10 bytes in 1 blocks are definitely lost in loss record 1 of 2
==10327==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==10327==    by 0x4005CE: mem_leak1 (MemDebug.c:8)
==10327==    by 0x40066F: main (MemDebug.c:37)
==10327== 
==10327== 568 bytes in 1 blocks are still reachable in loss record 2 of 2
==10327==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==10327==    by 0x4E9E54C: __fopen_internal (in /usr/lib64/libc-2.17.so)
==10327==    by 0x4005EB: mem_leak2 (MemDebug.c:13)
==10327==    by 0x400674: main (MemDebug.c:38)
==10327== 
==10327== LEAK SUMMARY:
==10327==    definitely lost: 10 bytes in 1 blocks
==10327==    indirectly lost: 0 bytes in 0 blocks
==10327==      possibly lost: 0 bytes in 0 blocks
==10327==    still reachable: 568 bytes in 1 blocks
==10327==         suppressed: 0 bytes in 0 blocks
==10327== 
==10327== For counts of detected and suppressed errors, rerun with: -v
==10327== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
